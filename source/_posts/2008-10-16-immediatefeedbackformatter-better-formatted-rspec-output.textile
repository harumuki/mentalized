---
layout: post
title: ImmediateFeedbackFormatter - Better formatted RSpec output
date: '2008-10-16 14:08:21 +0200'
mt_id: 1994
categories:
- programming
- technology
- projects
---
<ins>Update: If you want something like this for RSpec 2, use "Fuubar":https://github.com/jeffkreeftmeijer/fuubar</ins>

On one of my projects the specs are now taking a full 10 minutes to run on my machine. Needless to say, it's mightily annoying seeing a spec failure in the output knowing you'll have to wait for 10 minutes before you get the details of what's failing and you can get to fixing it.

Luckily my co-worker, "Laust Rud Jensen":http://www.linkedin.com/in/laustrud, had that same itch and decided to scratch it. Unfortunately he doesn't have a website to post about these things, so I am posting it for him:

<!--more-->

h2. Laust speaks

<blockquote>

Itch: specs are slow and RSpec progress feedback is either extremely verbose, or you have to wait for the full spec run to complete before you can see what failed.

Scratch: I've hacked together a new simple RSpec formatter called ImmediateFeedbackFormatter, with code based on the existing SpecdocFormatter.

bc. My spec/spec.opts file now contains:
--require
spec/rspec_immediate_feedback_formatter.rb
--format
Spec::Runner::Formatter::ImmediateFeedbackFormatter
--colour
--loadby
mtime
--backtrace

The require and format options are needed to use the ImmediateFeedbackFormatter.

This new formatter will print full error details as soon as they are found. Successful or pending examples are written only as a dot in the output. Name of a spec group is only printed if errors occur within the group, so much less unnecessary output is generated.

</blockquote>


h2. Download it

For now, you can get the basic formatter "here":https://mentalized.net/files/rspec/rspec-immediate-feedback-formatter.rb - hopefully it'll sneak into RSpec proper or end up somewhere more accessible (and with tests and whatnot).

Install it by putting it somewhere in your project (spec/ for example), and require it in your spec.opts as shown above.
